# Concern to facilitate error-parsing
#
# Takes all errors generated by ohm-validations and raises an error describing what went wrong
#
module Global8ballGame
  module HandleErrorsConcern
    extend ActiveSupport::Concern

    protected

    def handle_errors errors
      mapped_errors = []

      errors.each do |key, value_array|
        mapped_errors << key.to_s + ' is ' + value_array.map{|v| v.to_s.humanize(capitalize: false)}.join(", ")
      end

      raise "#{self.class} is not valid. Errors: #{mapped_errors.join('. ')}."
    end
  end
end
